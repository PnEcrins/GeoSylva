<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"> </script>

{{#features}}
  <li id="{{id_sect}}" class="item" style="width:238px;">
    <h5 class="title-feature"> {{nom_sect}}</h5>

     

		<!-- Chart 1-->
	    <div class="Chart">
                <div class="textChart">
              <div class="title-chart">Types de peuplements</div>
               <div class="subtitle-chart"><i>sur le secteur</i></div>
          </div> 
	        <div id="idChart">
	            <canvas id="doughnut-chart" width="120" height="90"></canvas>
	        </div>
       
	    </div>

	    <!-- ./Chart 1-->		
</br>

    <!-- Chart 2-->

      <div class="Chart">
                <div class="textChart">
              <div class="title-chart">Types de recouvrement</div>
               <div class="subtitle-chart"><i>sur le secteur</i></div>
          </div> 

          <div id="idChart2">
              <canvas id="doughnut-chart2" width="120" height="90"></canvas>
          </div>
       
      </div>

      <!-- ./Chart 2-->   



      <br> </br>


    <img src={{url_sect_img}} class="fit-picture" style="margin-top:5%;" alt="Image" height="250" width="250" />

     <a href="{{url_sect}}" target="_blank" title="Lien site internet" class="but-link">
              <span class="fa fa-globe" aria-hidden="true"></span> <b>Découvrir le secteur</b>
         </a>

</br>
              <!--Chiffres clés-->

        <div class="row numberkey" style="height: auto;">
          <div class="zone-iconnumber col-sm-4">
              <div id="iconnumber"></div>
            </div>
          <div class="col-sm-8 numText">
            <div class="number-feature">{{pert_for20_sect}} ha</div>
            <div class="titlenumber-feature">Perte forestière</div>
            <div class="subtitlenumber-feature"><i>estimée entre 2000 et 2020</i></div>
          </div>
        </div>
        <!--./Chiffres clés-->

            <div class="position-button">
      <a href="https://earthenginepartners.appspot.com/science-2013-global-forest" target="_blank" class="button-link">En savoir plus</a>
    </div>





      		

          <!-- TEXTE
    <p class="text-feature">    
      <span style="font-family:'roboto_bold'"> Surface totale :</span> {{surface_ha_sect}} ha<br/>
      <span style="font-family:'roboto_bold'"> Perte forestière (2000-2020) :</span> {{pert_for20_sect}}ha<br/>
    </p>
    -->


	</li>
{{/features}}

<style>

	/*** Couleur de mon template  */
	:root {
		--mycolor: #1D1B35;
	}

  	/***********************************************/
	/*** Ne pas toucher aux propriétés suivantes ***/

	/* Texte */

	.title-feature {
		color: var(--mycolor);
	    font-family: 'roboto_bold', Arial, Sans-serif;
	    text-transform: uppercase;
	    font-size: 19px;
	    margin-bottom: 7%;
	    line-height: 1.2;
	}
	.subtitle-feature {
		color: var(--mycolor);
		font-family:'roboto_regular', Arial, Sans-serif;
		font-size:18px;
		margin-top:7%;
		line-height:1;
	}

	.text-feature{
		font-family:'roboto_regular', Arial, Sans-serif;
		color:#555;
		font-size:12px;
		margin-top:5%;
	}

	/* Chart */
  .Chart{
		text-align:center; 
    margin:0;
	}

    .textChart {
      
      font-family:"roboto_regular";
      font-size: 13px;
      color:#777;
      margin-top: 5px;
    }
    .title-chart{
      font-family: "roboto_bold";
    }

/* Chiffres clés */

  .numberkey {
      margin-top: 10px; 
      height: auto;   
    }

  .zone-iconnumber{
    padding:10px 20px;
  }

  #iconnumber{
      -webkit-mask-repeat: no-repeat;
      mask-repeat: no-repeat;
      height: 60px;
      width: 60px;
      background: var(--mynumbercolor);
   }

   .numText{
      padding: 0px 10px 0px 0px;
  }

  .number-feature {
      color: var(--mynumbercolor);
      font-family: var(--myfont);
    font-weight:700;
      font-size:25px;   
    }

    .titlenumber-feature {
      color: var(--mynumbercolor);
      font-family: var(--myfont);
    font-weight:700;
      font-size:13px;
      line-height:1;
  }

  .subtitlenumber-feature{
    font-size:11px;
    color:#777;
    margin: 5px 0px;
  }
  
  /* Bouton en savoir plus*/

  .position-button{
    text-align: center;
    padding: 15px;
  }

  a.button-link {
    border-radius: 4px;
    color: #FFFFFF;
    font-family: var(--myfont);
    font-size: 12px;
    padding: 8px;
    background-color: var(--mycolor);
    border: solid var(--mycolor) 1px;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
  }

  a.button-link:hover {
    background: var(--mycolor);
    border: solid var(--mycolor) 1px;
    border-radius: 4px;
    text-decoration: none;
  }


	
</style>




<script language="javascript"> 

  ////// PARAMETRAGE DU GRAPHIQUE - JS///////

  /// Récupération du code_geo de l'entité selectionnée 
  var c_geo = [];
        {{#features}}
            c_geo.push('{{nom_sect}}');
        {{/features}}

{{#features}}

      getData();
  
        async function getData() {
            const response = await fetch(
'https://geoserver.ecrins.net/geoserver/cite/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoSylva%3Av_stats_ppmt&maxFeatures=1000&outputFormat=application/json');
            console.log(response);
            const data = await response.json();
            console.log(data);
            length = data.features.length;
            console.log(length);
  


            ppmt = [];
            sect = [];
            values = [];
            

            function filterBySecteur(secteur) {
                const dataBySect = [];
                data.features.forEach((element)=> {
                if(element.properties.nom_sect == secteur) {
                    dataBySect.push(element.properties.aire_ha);
                    ppmt.push(element.properties.classif_peuplement)
                }
            })
                return dataBySect;
            }
            values = filterBySecteur("{{nom_sect}}");

console.log(values)
  
            new Chart(document.getElementById("doughnut-chart"), {
                type: 'doughnut',
                data: {
                    labels: ppmt,
                    datasets: [
                        {
                            label: ppmt,
                            backgroundColor: ["#00cf77",
                                              "#0e7e03", 
                                              "#4e7e58", 
                                              "#4ec3cf", 
                                              "#238d5d",
                                              "#bee91f", 
                                              "#4ec3cf", 
                                              "#ecfd19", 
                                              "#fdec19"],
                            data: values
                        }
                    ]
                },
                options: {
                    responsive: true,
                    legend: {
                    display: false
                             },
                }
            });
  
        }

{{/features}}
</script>        



<script language="javascript"> 

  ////// PARAMETRAGE DU GRAPHIQUE - JS///////

  /// Récupération du code_geo de l'entité selectionnée 
  var c_geo = [];
        {{#features}}
            c_geo.push('{{nom_sect}}');
        {{/features}}

{{#features}}

      getData();
  
        async function getData() {
            const response = await fetch(
'https://geoserver.ecrins.net/geoserver/cite/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=GeoSylva%3Av_stats_recouv&maxFeatures=1000&outputFormat=application/json');
            console.log(response);
            const data = await response.json();
            console.log(data);
            length = data.features.length;
            console.log(length);
  


            recouv = [];
            sect = [];
            values = [];
            

            function filterBySecteur(secteur) {
                const dataBySect = [];
                data.features.forEach((element)=> {
                if(element.properties.nom_sect == secteur) {
                    dataBySect.push(element.properties.aire_ha);
                    recouv.push(element.properties.reclass_recouv)
                }
            })
                return dataBySect;
            }
            values = filterBySecteur("{{nom_sect}}");

console.log(values)
  
            new Chart(document.getElementById("doughnut-chart2"), {
                type: 'doughnut',
                data: {
                    labels: recouv,
                    datasets: [
                        {
                            label: recouv,
                            backgroundColor: ["#00cf77",
                                              "#0e7e03", 
                                              "#4e7e58", 
                                              "#4ec3cf", 
                                              "#238d5d",
                                              "#bee91f", 
                                              "#4ec3cf", 
                                              "#ecfd19", 
                                              "#fdec19"],
                            data: values
                        }
                    ]
                },
                options: {
                    responsive: true,
                    legend: {
                    display: false
                             },
                }
            });
  
        }

{{/features}}
</script>        